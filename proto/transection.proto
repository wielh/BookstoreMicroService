syntax = "proto3";

service TransectionService {
    rpc activityList(ActivityRequest) returns (ActivityReponse);
    rpc transection (TransectionRequest) returns (TransectionResponse);
    rpc transectionRecord (TransectionRecordRequest) returns (TransectionRecordResponse);
}

message ActivityRequest {}

message ActivityReponse {
    int32 errCode = 1;
    repeated ActivityReponseData data = 2;
}

message ActivityReponseData {
    string activityID = 1;
    int32 activityType = 2;
    int64 startDate = 3;
    int64 endDate = 4;
    string activityInfo = 5;
}

message TransectionRequest {
    string userId = 1;
    string activityID = 2;
    int32 activityType = 3;
    repeated BookInfo bookInfo = 4;
}

message BookInfo {
    string bookId = 1;
    int32 bookNumber = 2;
    int32 price = 3;
}

message TransectionResponse {
    int32 errCode = 1; 
    repeated BookInfo bookInfo = 2;
    ActivityReponseData appliedActivityData = 3;
    int32 totalPrice = 4; 
    int64 transectionTime = 5;
}

message TransectionRecordRequest {
    string userId = 1;
    int32 page = 2;
    int32 pageSize = 3;
}

message TransectionRecord {
    repeated BookInfo bookInfo = 1;
    ActivityReponseData appliedActivityData = 2;
    int32 totalPrice = 3; 
    int64 transectionTime = 4;
}

message TransectionRecordResponse {
    int32 errCode = 1; 
    string userId = 2;
    int32 recordNumber = 3;
    int32 page = 4;
    int32 pageSize = 5;
    repeated TransectionRecord transectionRecords = 6;
}